name: Terraform CI

on: 
  push:
    branches:
      - master

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    env:
      TF_VAR_compartment_id:   ${{ secrets.TF_VAR_compartment_ocid }}
      TF_VAR_fingerprint:      ${{ secrets.TF_VAR_fingerprint }}
      TF_VAR_private_key:      ${{ secrets.TF_VAR_private_key }}
      #TF_VAR_private_key_path: $GITHUB_WORKSPACE/oci.pem
      TF_VAR_tenancy_ocid:     ${{ secrets.TF_VAR_tenancy_ocid }}
      TF_VAR_user_ocid:        ${{ secrets.TF_VAR_user_ocid }}
      TF_VAR_region:           ${{ secrets.TF_VAR_region }}
  
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      
        
    - name: 'Write Config & Key Files'
      run: |
        mkdir ~/.oci
        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.TF_VAR_user_ocid}}" >> ~/.oci/config
        echo "fingerprint=${{secrets.TF_VAR_fingerprint}}" >> ~/.oci/config
        echo "compartment_id=${{secrets.TF_VAR_compartment_ocid}}" >> ~/.oci/config 
        echo "region=${{secrets.TF_VAR_region}}" >> ~/.oci/config
        echo "tenancy=${{secrets.TF_VAR_tenancy_ocid}}" >> ~/.oci/config
        echo "key_file=~/.oci/key.pem" >> ~/.oci/config
        echo "${{secrets.TF_VAR_private_key}}" > ~/.oci/key.pem  
        
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: 1.14

    - name: Get dependencies
      run: |
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        else
          go get -v -d -t ./...  
        fi
      
    - name: Debug
      run: |
        pwd
        echo ${HOME}
        echo ${GITHUB_WORKSPACE}
        echo ${GOPATH}
        echo ${GOROOT}
          
    - name: Terratest
      working-directory: /home/runner/work/terraform-oci-vcn/terraform-oci-vcn/test
      run: sudo go test -v
      
